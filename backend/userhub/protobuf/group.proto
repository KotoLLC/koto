syntax = "proto3";

package rpc;
option go_package = "../rpc";

import "model.proto";

service GroupService {
    // Admin API
    rpc AddGroup (GroupAddGroupRequest) returns (GroupAddGroupResponse);
    rpc EditGroup (GroupEditGroupRequest) returns (Empty);
    rpc DeleteGroup (GroupDeleteGroupRequest) returns (Empty);
    rpc ManagedGroup (Empty) returns (GroupManagedGroupsResponse);
    rpc AddUser (GroupAddUserRequest) returns (Empty);
    rpc RemoveUser (GroupRemoveUserRequest) returns (Empty);
    rpc InvitesToConfirm (Empty) returns (GroupInvitesToConfirmResponse);
    rpc ConfirmInvite (GroupConfirmInviteRequest) returns (Empty);
    rpc DenyInvite (GroupDenyInviteRequest) returns (Empty);

    // User API
    rpc PublicGroups (Empty) returns (GroupPublicGroupsResponse);
    rpc GroupDetails (GroupGroupDetailsRequest) returns (GroupGroupDetailsResponse);
    rpc RequestJoin (GroupRequestJoinRequest) returns (Empty);
    rpc DeleteJoinRequest (GroupDeleteJoinRequestRequest) returns (Empty);
    rpc LeaveGroup (GroupLeaveGroupRequest) returns (Empty);
    rpc InvitesFromMe (Empty) returns (GroupInvitesFromMeResponse);
    rpc InvitesForMe (Empty) returns (GroupInvitesForMeResponse);

    // Low-level API
    rpc CreateInvite (GroupCreateInviteRequest) returns (Empty);
    rpc DeleteInvite (GroupDeleteInviteRequest) returns (Empty);
    rpc AcceptInvite (GroupAcceptInviteRequest) returns (Empty);
    rpc RejectInvite (GroupRejectInviteRequest) returns (Empty);
}

message GroupAddGroupRequest {
    string name = 1;
    string description = 2;
    string avatar_id = 3;
    bool is_public = 4;
    string background_id = 5;
}

message GroupAddGroupResponse {
    Group group = 1;
}

message GroupEditGroupRequest {
    string group_id = 1;
    bool description_changed = 2;
    string description = 3;
    bool avatar_changed = 4;
    string avatar_id = 5;
    bool is_public_changed = 6;
    bool is_public = 7;
    bool background_changed = 8;
    string background_id = 9;
}

message GroupDeleteGroupRequest {
    string group_id = 1;
}

message GroupManagedGroupsResponse {
    repeated Group groups = 1;
}

message GroupAddUserRequest {
    string group_id = 1;
    string user = 2;
}

message GroupRequestJoinRequest {
    string group_id = 1;
    string message = 2;
}

message GroupDeleteJoinRequestRequest {
    string group_id = 1;
    string inviter_id = 2;
}

message GroupCreateInviteRequest {
    string group_id = 1;
    string invited = 2;
    string message = 3;
}

message GroupDeleteInviteRequest {
    string group_id = 1;
    string invited = 2;
}

message GroupAcceptInviteRequest {
    string group_id = 1;
    string inviter_id = 2;
}

message GroupRejectInviteRequest {
    string group_id = 1;
    string inviter_id = 2;
}

message GroupConfirmInviteRequest {
    string group_id = 1;
    string inviter_id = 2;
    string invited_id = 3;
}

message GroupDenyInviteRequest {
    string group_id = 1;
    string inviter_id = 2;
    string invited_id = 3;
}

message GroupInvite {
    string group_id = 1;
    string group_name = 2;
    string group_description = 3;
    string inviter_id = 4;
    string inviter_name = 5;
    string inviter_full_name = 6;
    string invited_id = 7;
    string invited_name = 8;
    string invited_full_name = 9;
    string created_at = 10;
    string accepted_at = 11;
    string rejected_at = 12;
    string accepted_by_admin_at = 13;
    string rejected_by_admin_at = 14;
    string message = 15;
}

message GroupInvites {
    Group group = 1;
    repeated GroupInvite invites = 4;
}

message GroupInvitesFromMeResponse {
    repeated GroupInvite invites = 1;
}

message GroupInvitesForMeResponse {
    repeated GroupInvite invites = 1;
}

message GroupInvitesToConfirmResponse {
    repeated GroupInvites groups = 1;
}

message GroupLeaveGroupRequest {
    string group_id = 1;
}

message GroupRemoveUserRequest {
    string group_id = 1;
    string user_id = 2;
}

message GroupPublicGroupsResponseItem {
    Group group = 1;
    string status = 2;
}

message GroupPublicGroupsResponse {
    repeated GroupPublicGroupsResponseItem groups = 1;
}

message GroupGroupDetailsRequest {
    string group_id = 1;
}

message GroupGroupDetailsResponse {
    Group group = 1;
    repeated User members = 2;
    repeated GroupInvite invites = 3;
    string status = 4;
}
