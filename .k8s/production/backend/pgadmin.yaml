apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin
  labels:
    app: pgadmin
  namespace: backend
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  labels:
    app: pgadmin
  namespace: backend
spec:
  ports:
    - port: 80
  selector:
    app: pgadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: backend
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      initContainers:
        - name: pgadmin-data-permission-fix
          image: busybox
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
          - name: pgadmin-data
            mountPath: /var/lib/pgadmin
      containers:
        - name: pgadmin
          image: "dpage/pgadmin4"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: pgadmin
          env:
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin
                  key: pgadmin-password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgadmin
  namespace: backend
data:
  PGADMIN_DEFAULT_EMAIL: admin@koto.at

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin
  namespace: backend
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "do-issuer"
    # acme.cert-manager.io/http01-edit-in-place: "true"
    # cert-manager.io/issue-temporary-certificate: "true"
spec:
  tls:
  - hosts:
    - "*.koto.at"
    secretName: koto-tls-backend
  rules:
  - host: progresso-pg.koto.at
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80