on: [workflow_dispatch]
jobs:
  build-and-publish:
    name: Build and Publish images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and Publish Frontend 
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_tag: v0.${{ env.RUN_ID }},latest
          context: ./frontend
          dockerfile: Dockerfile.production
          registry: docker.pkg.github.com
          repository: kotollc/koto/frontend
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} }}

      - name: Build and Publish User Hub 
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_tag: v0.${{ env.RUN_ID }},latest
          context: ./backend
          dockerfile: userhub/Dockerfile
          registry: docker.pkg.github.com
          repository: kotollc/koto/userhub
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} }}

      - name: Build and Publish Message Hub 
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_tag: v0.${{ env.RUN_ID }},latest
          directory: ./backend
          dockerfile: ./backend/messagehub/Dockerfile
          registry: docker.pkg.github.com
          repository: kotollc/koto/backend
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} }}
  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: build-and-publish
    env:
      DO_CLUSTER_ID: "b68876cd-8a1d-4073-bb00-0ac36beacc0c"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.DO_CLUSTER_ID }}
      - name: Update deployment file (staging)
        run: |
          sed -i 's|<TAG>|'v0.${{ env.RUN_ID }}'|' $GITHUB_WORKSPACE/.k8s/backend-staging/user-hub.yaml
          sed -i 's|<TAG>|'v0.${{ env.RUN_ID }}'|' $GITHUB_WORKSPACE/.k8s/frontend-staging/frontend.yaml
          sed -i 's|<TAG>|'v0.${{ env.RUN_ID }}'|' $GITHUB_WORKSPACE/.k8s/backend-staging/message-hub.yaml

      - name: Deploy Frontend and User-hub to DigitalOcean Kubernetes (staging)
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/backend-staging/user-hub.yaml --force
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/frontend-staging/frontend.yaml --force
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/backend-staging/message-hub.yaml --force
      - name: Staging Push
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: v0.${{ env.RUN_ID }} pushed to staging
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}