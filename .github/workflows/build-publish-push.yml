on:
  push:
    # branches:
    #   - master
    # paths:
    # - 'frontend/**'
    tags:
      - '*'

jobs:
  build:
    name: Build and Publish images
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - uses: belon/docker-build-push@v4.0
        name: Build & push Frontend Docker image
        with:
          image: k0t0/frontend
          tags: ${{ steps.get_version.outputs.VERSION }}, latest
          registry: docker.io
          directory: ./frontend
          dockerfile: ./frontend/Dockerfile.production
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: belon/docker-build-push@v4.0
        name: Build & push Backend User Hub Docker image
        with:
          image: k0t0/central
          tags: ${{ steps.get_version.outputs.VERSION }}, latest
          registry: docker.io
          directory: ./backend
          dockerfile: ./backend/userhub/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: belon/docker-build-push@v4.0
        name: Build & push Backend Message Hub Docker image
        with:
          image: k0t0/node
          tags: ${{ steps.get_version.outputs.VERSION }}, latest
          registry: docker.io
          directory: ./backend
          dockerfile: ./backend/messagehub/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build

    env:
      DO_CLUSTER_ID: "b68876cd-8a1d-4073-bb00-0ac36beacc0c"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install Doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.DO_CLUSTER_ID }}


      - name: Update deployment file
        run: |
          sed -i 's|<TAG>|'${{ needs.build.outputs.version }}'|' $GITHUB_WORKSPACE/.k8s/orbits/backend/user-hub.yaml
          sed -i 's|<TAG>|'${{ needs.build.outputs.version }}'|' $GITHUB_WORKSPACE/.k8s/orbits/frontend/frontend.yaml
          sed -i 's|<TAG>|'${{ needs.build.outputs.version }}'|' $GITHUB_WORKSPACE/.k8s/orbits/backend/message-hub.yaml

      - name: Deploy Frontend and User-hub to DigitalOcean Kubernetes
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/orbits/backend/user-hub.yaml
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/orbits/frontend/frontend.yaml
          kubectl apply -f $GITHUB_WORKSPACE/.k8s/orbits/backend/message-hub.yaml
